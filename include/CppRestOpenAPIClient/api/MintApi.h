/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MintApi.h
 *
 * 
 */

#ifndef API_MintApi_H_
#define API_MintApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/MintBatchDto.h"
#include "CppRestOpenAPIClient/model/MintDto.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace api {

using namespace models;



class  MintApi 
{
public:

    explicit MintApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~MintApi();

    /// <summary>
    /// Airdrop asset to player
    /// </summary>
    /// <remarks>
    /// Airdrop asset to player
    /// </remarks>
    /// <param name="authorization">API key is associated with multiple projects. Please include it in to use developers API.</param>
    /// <param name="mintDto"></param>
    pplx::task<void> mintControllerAirdrop(
        utility::string_t authorization,
        std::shared_ptr<MintDto> mintDto
    ) const;
    /// <summary>
    /// Award asset to player
    /// </summary>
    /// <remarks>
    /// Award asset to player
    /// </remarks>
    /// <param name="authorization">API key is associated with multiple projects. Please include it in to use developers API.</param>
    /// <param name="mintDto"></param>
    pplx::task<void> mintControllerAward(
        utility::string_t authorization,
        std::shared_ptr<MintDto> mintDto
    ) const;
    /// <summary>
    /// Mint asset
    /// </summary>
    /// <remarks>
    /// Mint an asset by admin to player
    /// </remarks>
    /// <param name="authorization">API key is associated with multiple projects. Please include it in to use developers API.</param>
    /// <param name="mintDto"></param>
    pplx::task<void> mintControllerMint(
        utility::string_t authorization,
        std::shared_ptr<MintDto> mintDto
    ) const;
    /// <summary>
    /// Batch mint assets
    /// </summary>
    /// <remarks>
    /// Batch mint assets by admin to player
    /// </remarks>
    /// <param name="authorization">API key is associated with multiple projects. Please include it in to use developers API.</param>
    /// <param name="mintBatchDto"></param>
    pplx::task<void> mintControllerMintBatch(
        utility::string_t authorization,
        std::shared_ptr<MintBatchDto> mintBatchDto
    ) const;
    /// <summary>
    /// Mint asset by player
    /// </summary>
    /// <remarks>
    /// Mint asset by player. Player must have enough balance to mint.
    /// </remarks>
    /// <param name="authorization">API key is associated with multiple projects. Please include it in to use developers API.</param>
    /// <param name="mintDto"></param>
    pplx::task<void> mintControllerPlayerMint(
        utility::string_t authorization,
        std::shared_ptr<MintDto> mintDto
    ) const;
    /// <summary>
    /// Batch mint assets by player
    /// </summary>
    /// <remarks>
    /// Batch mint assets by player. Player must have enough balance to mint.
    /// </remarks>
    /// <param name="authorization">API key is associated with multiple projects. Please include it in to use developers API.</param>
    /// <param name="mintBatchDto"></param>
    pplx::task<void> mintControllerPlayerMintBatch(
        utility::string_t authorization,
        std::shared_ptr<MintBatchDto> mintBatchDto
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}

#endif /* API_MintApi_H_ */

