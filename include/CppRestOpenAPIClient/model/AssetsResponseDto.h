/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AssetsResponseDto.h
 *
 * 
 */

#ifndef MODELS_AssetsResponseDto_H_
#define MODELS_AssetsResponseDto_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Asset.h"
#include <vector>

namespace models {

class Asset;

/// <summary>
/// 
/// </summary>
class  AssetsResponseDto
    : public ModelBase
{
public:
    AssetsResponseDto();
    virtual ~AssetsResponseDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AssetsResponseDto members

    /// <summary>
    /// Number of assets to return per page
    /// </summary>
    std::vector<std::shared_ptr<Asset>>& getItems();
    bool itemsIsSet() const;
    void unsetItems();

    void setItems(const std::vector<std::shared_ptr<Asset>>& value);

    /// <summary>
    /// Number of total items
    /// </summary>
    double getTotal() const;
    bool totalIsSet() const;
    void unsetTotal();

    void setTotal(double value);

    /// <summary>
    /// Number of items to return per page
    /// </summary>
    double getLimit() const;
    bool limitIsSet() const;
    void unsetLimit();

    void setLimit(double value);

    /// <summary>
    /// Page number
    /// </summary>
    double getPage() const;
    bool pageIsSet() const;
    void unsetPage();

    void setPage(double value);


protected:
    std::vector<std::shared_ptr<Asset>> m_Items;
    bool m_ItemsIsSet;
    double m_Total;
    bool m_TotalIsSet;
    double m_Limit;
    bool m_LimitIsSet;
    double m_Page;
    bool m_PageIsSet;
};


}

#endif /* MODELS_AssetsResponseDto_H_ */
