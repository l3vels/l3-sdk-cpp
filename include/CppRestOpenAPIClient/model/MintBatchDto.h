/**
 * L3vels Api
 * L3vels API for Game developers
 *
 * The version of the OpenAPI document: 0.3
 * Contact: support@l3vels.xyz
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.5.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MintBatchDto.h
 *
 * 
 */

#ifndef MODELS_MintBatchDto_H_
#define MODELS_MintBatchDto_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace models {


/// <summary>
/// 
/// </summary>
class  MintBatchDto
    : public ModelBase
{
public:
    MintBatchDto();
    virtual ~MintBatchDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// MintBatchDto members

    /// <summary>
    /// Project Id
    /// </summary>
    utility::string_t getProjectId() const;
    bool projectIdIsSet() const;
    void unsetProject_id();

    void setProjectId(const utility::string_t& value);

    /// <summary>
    /// Collection Id
    /// </summary>
    utility::string_t getCollectionId() const;
    bool collectionIdIsSet() const;
    void unsetCollection_id();

    void setCollectionId(const utility::string_t& value);

    /// <summary>
    /// Player address to mint token to
    /// </summary>
    utility::string_t getPlayerAddress() const;
    bool playerAddressIsSet() const;
    void unsetPlayer_address();

    void setPlayerAddress(const utility::string_t& value);

    /// <summary>
    /// Player ID to mint to. You can provide this or player_address
    /// </summary>
    utility::string_t getPlayerId() const;
    bool playerIdIsSet() const;
    void unsetPlayer_id();

    void setPlayerId(const utility::string_t& value);

    /// <summary>
    /// Array of tokens to mint
    /// </summary>
    std::vector<utility::string_t>& getAssets();
    bool assetsIsSet() const;
    void unsetAssets();

    void setAssets(const std::vector<utility::string_t>& value);


protected:
    utility::string_t m_Project_id;
    bool m_Project_idIsSet;
    utility::string_t m_Collection_id;
    bool m_Collection_idIsSet;
    utility::string_t m_Player_address;
    bool m_Player_addressIsSet;
    utility::string_t m_Player_id;
    bool m_Player_idIsSet;
    std::vector<utility::string_t> m_Assets;
    bool m_AssetsIsSet;
};


}

#endif /* MODELS_MintBatchDto_H_ */
